
// import { FETCH_EVENTS } from './deviceConstants';
// import { asyncActionStart, asyncActionFinish, asyncActionError } from '../async/asyncActions';
// import { createNewEvent } from '../../app/common/util/helpers';
// import moment from 'moment';
// import firebase from '../../app/config/firebase';
// import compareAsc from 'date-fns/compare_asc';
// import * as types from '../../app/constants/DeviceActionTypes';
// ** The revents version calls a function in util/helpers to create the event
// swapped this for a local function "createNewDevice" 
// import { withFirestore } from 'react-redux-firebase';

import firebase from 'firebase';


export const createNewtask = ( device, task, arg) => {

  return {
  ...device,
    ...task, 
    arg: arg,
    updated: Date.now()
  }
}





export const logTask = (device, task, arg) => {
  console.log({device} , "from firebaseapi" );

  // Initialize Cloud Firestore through Firebase
var db = firebase.firestore();

// Disable deprecated features
db.settings({
  timestampsInSnapshots: true
});



 //  const firestore = getFirestore();
  let newTask = task ;
  console.log( {newTask}, "<-- the new task object") ;

// Add a new document with a generated id.
db.collection("tasks").add(device)
.then(function(docRef) {
  console.log("Document written with ID: ", docRef.id);
})
.catch(function(error) {
  console.error("Error adding document: ", error);
});


 // firestore.add(`tasks`, newTask);



  // return async (dispatch, getState, { getFirestore }) => {
  //   const firestore = getFirestore();
  //   const user = firestore.auth().currentUser;
  //   const photoURL = getState().firebase.profile.photoURL;
  //   let newTask = task ;
  //   console.log( {newTask}, "<-- the new task object") ;
  //   try {
  //     let createdDevice = await firestore.add(`tasks`, newTask);
      
  //     toastr.success('Success', 'Device was created');
  //   } catch (error) {
  //     toastr.error('Oops', 'Something went wrong');
  //   }
  // };
};
