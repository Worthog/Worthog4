// import initialState from './initialState';
import * as types from '../constants/BlogActionTypes'


var index = 0; 

export default function blogReducer(state={blogs:[]}, action) {

  
  switch (action.type) {

    case types.GET_BLOGS_SUCCESS:
        console.log("get_blogs_success"); 
        return Object.assign({}, state, { blogs: action.blogs });

    case types.ADD_BLOG_SUCCESS:
        return Object.assign({}, state, {
        blogs: [
          ...state.blogs,
          {
            text: action.text,
          }
        ]
      })    


    case types.DELETE_BLOG:
      return state.filter(blog =>
        blog.id !== action.id
      )

    case types.DELETE_BLOG_SUCCESS:
        index = state.blogs.findIndex((blog) => blog._id === action.blog._id);
        console.log("DELETE blog index = ", index);        
        return Object.assign({}, state.blogs, {
            blogs: [
            ...state.blogs.slice(0, index),
            Object.assign({}, state.blogs[index], action.blog._id ),
            ...state.blogs.slice(index + 1)
        ]
        });

    case types.EDIT_BLOG_SUCCESS:
        index = state.blogs.findIndex((blog) => blog._id === action.blog._id);
        console.log("EDIT blog index = ", index);        
        return Object.assign({}, state.blogs, {
            blogs: [
            ...state.blogs.slice(0, index),
            Object.assign({}, state.blogs[index], action.blog._id ),
            ...state.blogs.slice(index + 1)
        ]
        });
            

    case types.COMPLETE_BLOG_SUCCESS:
        console.log("from blog reducer state = ", state) ;
        console.log("from blog reducer action = ", action ) ;
        console.log("from reducer action.blog._id = ", action.blog._id ) ;
        
        index = state.blogs.findIndex((blog) => blog._id === action.blog._id);
        console.log("the blog index is = ", index); 
       
        return Object.assign({}, state.blogs, {
            blogs: [
            ...state.blogs.slice(0, index),
            Object.assign({}, state.blogs[index], action.blog._id ),
            ...state.blogs.slice(index + 1)
        ]
        });
               
   

    default:
      return state
  }
}
